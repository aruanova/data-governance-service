version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dgs-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme123}
      POSTGRES_DB: ${DB_NAME:-datagovernance}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dgs-network

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: dgs-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dgs-network

  # Asynq Monitor (Web UI for queues)
  asynqmon:
    image: hibiken/asynqmon:latest
    container_name: dgs-asynqmon
    ports:
      - "8081:8080"
    environment:
      - REDIS_ADDR=redis:6379
    depends_on:
      - redis
    networks:
      - dgs-network

volumes:
  postgres_data:
  redis_data:

networks:
  dgs-network:
    driver: bridge